services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: server.1=zookeeper:2888:3888
      ALLOW_ANONYMOUS_LOGIN: "yes"
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/log:/var/lib/zookeeper/log
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB: kafka_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kafka-network

  orders-service:
    build:
      context: ./orders-service
    container_name: orders-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kafka_db
      SPRING_DATASOURCE_USERNAME:
      SPRING_DATASOURCE_PASSWORD:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      LOGGING_FILE_NAME: /app/logs/orders-service.log
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8082:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      LOGGING_FILE_NAME: /app/logs/payment-service.log
    volumes:
      - ./logs:/app/logs
    depends_on:
      - kafka
    networks:
      - kafka-network

  shipping-service:
    build:
      context: ./shipping-service
    container_name: shipping-service
    ports:
      - "8083:8083"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      LOGGING_FILE_NAME: /app/logs/shipping-service.log
    volumes:
      - ./logs:/app/logs
    depends_on:
      - kafka
    networks:
      - kafka-network

  notifications-service:
    build:
      context: ./notifications-service
    container_name: notifications-service
    ports:
      - "8084:8084"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      LOGGING_FILE_NAME: /app/logs/notifications-service.log
    volumes:
      - ./logs:/app/logs
    depends_on:
      - kafka
    networks:
      - kafka-network

volumes:
  postgres_data:

networks:
  kafka-network:
    name: kafka-network